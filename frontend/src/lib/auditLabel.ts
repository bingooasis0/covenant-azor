export type AuditRow={ created_at:string; actor_first_name?:string; actor_last_name?:string; actor_email?:string; action:string; entity_type?:string|null; entity_id?:string|null; };
const ACTION_MAP:Record<string,string>={ login:"Logged in", mfa_setup:"Set up MFA", mfa_verify:"Verified MFA", mfa_reset:"Reset MFA", user_change_password:"Changed password", admin_users_list:"Viewed user list", admin_user_create:"Invited user", admin_user_delete:"Deleted user", admin_user_reset_password:"Reset user password", admin_user_mfa_reset:"Reset user MFA", referral_create:"Created referral", referral_patch_agent:"Edited referral", referral_patch_admin:"Edited referral", referral_delete:"Deleted referral", referral_note_add:"Added referral note", referral_email_send:"Sent referral email", audit_list:"Viewed audit log" };
const titleize=(s:string)=>s.replace(/[_-]+/g," ").replace(/\b\w/g,m=>m.toUpperCase());
export function formatAuditAction(row:AuditRow, refNoById:Map<string,string>):string{ const base=ACTION_MAP[row.action]||titleize(row.action||"Action"); if(row.entity_type==="referral"&&row.entity_id){ const ref=refNoById.get(row.entity_id)||row.entity_id; return `${base} Â· ${ref}`; } return base; }
